{"version":3,"sources":["TaskCard.js","DoneTasks.js","NavBar.js","Header.js","TaskList.js","TaskPage.js","NewTaskForm.js","App.js","reportWebVitals.js","index.js"],"names":["TaskCard","_ref","tasks","onTaskClick","_useState","useState","_useState2","Object","slicedToArray","complete","setComplete","react_default","a","createElement","className","marked","task","onClick","fetch","concat","id","method","then","resp","json","DoneTasks","onRemoveTask","console","log","tasksToBeDeletedList","map","item","src_TaskCard","key","linkStyles","display","width","padding","margin","background","textDecoration","color","NavBar","react_router_dom","to","exact","style","activeStyle","Header","TaskList","onMoveTask","displayCards","TaskPage","src_TaskList","defaultData","NewTaskForm","onAddTask","formData","setFormData","handleChange","event","objectSpread","defineProperty","target","name","value","onSubmit","preventDefault","createTask","headers","Content-Type","body","JSON","stringify","newTask","type","placeholder","onChange","hidden","App","setTasks","_useState3","_useState4","trashTasks","setTrashTasks","useEffect","src_Header","src_NavBar","react_router","path","src_TaskPage","taskToMove","find","toConsumableArray","src_NewTaskForm","addedTask","src_DoneTasks","deletedTask","updatedDisplay","filter","updatedTrashTask","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.e4780216.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n//import { Button, Card } from 'semantic-ui-react'\n\n\nfunction TaskCard({tasks, onTaskClick}) {\n  const [complete , setComplete] = useState(true)\n\n  function handleClick(){\n      fetch(`http://localhost:4001/tasks/${tasks.id}`,{\n        method: \"DELETE\" , \n      })\n       .then((resp) => resp.json())\n       .then(()=> onTaskClick(tasks))\n   }\n  function handleBtn (){\n    setComplete((complete)=>!complete)\n  }\n  \n\n  return (\n    <li className=\"card\">\n       <h4>{tasks.marked}</h4>\n        <p>{tasks.task}</p>\n        <div>\n         <button className=\"primary\" onClick={handleBtn}>{complete ? \"Click when complete\":\"completed\"}</button>\n        <div>\n       <button onClick={handleClick}>X</button>\n       </div>\n      </div>\n    </li>\n  )\n}\n\nexport default TaskCard;","import React from \"react\";\nimport TaskCard from \"./TaskCard\";\n\n\nfunction DoneTasks({tasks , onRemoveTask }){\n \n    console.log(\"line 6\", tasks)\n    const tasksToBeDeletedList = tasks.map((item) => (\n        <TaskCard key={item.id} tasks={item} onTaskClick={onRemoveTask} />\n      ));\n\n    return (\n        <div>\n            <strong>Click X to delete task forever</strong>\n            <ul className=\"cards\">\n           {tasksToBeDeletedList}\n           </ul>\n        </div>\n    )\n\n}\nexport default DoneTasks","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst linkStyles = {\n  display: \"inline-block\",\n  width: \"200px\",\n  padding: \"12px\",\n  margin: \"0 6px 2px\",\n  background: \"grey\",\n  textDecoration: \"none\",\n  color: \"white\",\n};\n\nfunction NavBar() {\n  return <div>{/*{code here}*/}\n              <NavLink\n        to=\"/\"\n        exact\n        style={linkStyles}\n        activeStyle={{\n          background: \"red\",\n        }}\n      >\n       Tasks\n      </NavLink>\n      <NavLink\n        to=\"/add\"\n        exact\n        style={linkStyles}\n        activeStyle={{\n          background: \"red\",\n        }}\n      >\n        Add tasks\n      </NavLink>\n      <NavLink\n        to=\"/done\"\n        exact\n        style={linkStyles}\n        activeStyle={{\n          background: \"red\",\n        }}\n      >\n        Delete page\n      </NavLink>\n           \n         </div>;\n}\n\nexport default NavBar;","import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>\n        Task app\n       </h1>\n    </header>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport TaskCard from \"./TaskCard\";\n\n\n\nfunction TaskList({tasks, onMoveTask}) {\n    const displayCards = tasks.map((item)=>(\n        <TaskCard tasks={item} key={item.id} onTaskClick ={onMoveTask} />\n      ))\n  return (\n    <div>\n      <ul className=\"cards\">\n      {displayCards}\n      </ul>\n    </div>\n  );\n}\n\nexport default TaskList;","import React from \"react\";\nimport TaskList from \"./TaskList\";\n\n\n\n\nfunction TaskPage({tasks, onMoveTask}) {\n    \n  return (\n    <main>\n      <strong>Click X to add task to Delete page</strong>\n       <TaskList tasks={tasks} onMoveTask={onMoveTask}/>\n    </main>\n  );\n}\n\nexport default TaskPage;","import React, { useState } from \"react\";\n\nconst defaultData = {\n  task: \"\",\n  marked: \"\",\n  }\n\nfunction NewTaskForm({onAddTask}) {\n  const [formData, setFormData] = useState(defaultData)\n // const [option,setOption] = useState('least important')\n\n  function handleChange(event){\n      //setFormData(event.target.value)\n      setFormData({\n        ...formData, [event.target.name]:event.target.value,\n      })\n  }\n\n  function handleSubmit(event){\n     event.preventDefault()\n     const createTask = {\n      task: formData.task,\n      marked: formData.marked\n     }\n     fetch(\"http://localhost:4001/tasks\",{\n      method:\"POST\",\n      headers:{\n        \"Content-Type\" : \"application/json\",\n      },\n      body: JSON.stringify(createTask),\n     })\n     .then((resp)=> resp.json())\n     .then((newTask)=> onAddTask(newTask));\n\n     setFormData(defaultData)\n  }\n  \n  \n  return (\n    <div className=\"new-plant-form\">\n      <h2>New Task</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"task\" placeholder=\"Task ...\" onChange={handleChange} value={formData.task}/>\n        <select name=\"marked\"  onChange={handleChange} value={formData.marked} >\n          <option value= \"default\" hidden>Task marked as</option>\n          <option name=\"marked\" value=\"least important\">least important</option>\n          <option name=\"marked\"value=\"IMPORTANT\">IMPORTANT</option>\n          <option name=\"marked\"value=\"URGENT!!\">URGENT</option>\n         </select>\n        <button type=\"submit\">Add Task</button>\n      </form>\n    </div>\n  );\n}\n\nexport default NewTaskForm;","import { Switch , Route} from \"react-router-dom\";\nimport './App.css';\n\n\nimport React, { useEffect, useState } from 'react';\n\nimport DoneTasks from './DoneTasks';\nimport NavBar from './NavBar';\n//import Search from \"./Search\";\nimport Header from \"./Header\";\nimport TaskPage from \"./TaskPage\";\nimport NewTaskForm from \"./NewTaskForm\";\n\n\nfunction App() {\n  const [tasks , setTasks] = useState([])\n  const [trashTasks , setTrashTasks] = useState([])\n\n    useEffect(()=>{\n      fetch(\" http://localhost:4001/tasks\")\n      .then((resp)=>resp.json())\n      .then((tasks)=> setTasks(tasks))\n    },[])\n\n    function handleAddtask(addedTask){\n      setTasks([...tasks, addedTask])\n    }\n    function handleMovetask(taskToMove){\n      console.log(\"line 29\", taskToMove)\n      const taskToBeTrashed = trashTasks.find(\n        (task) => task.id === taskToMove.id\n      );\n      if (!taskToBeTrashed) {setTrashTasks([...trashTasks, taskToMove])}\n      console.log(\"line 34\", trashTasks)\n\n    }\n    function handleDelete(deletedTask){\n      const updatedDisplay = tasks.filter((item) => item.id !== deletedTask.id)\n      setTasks(updatedDisplay)\n      const updatedTrashTask = trashTasks.filter((item)=> item.id !== deletedTask.id)\n      setTrashTasks(updatedTrashTask)\n    }\n   \n  return (\n    <div >\n      <Header />\n        <NavBar />\n         <Switch>\n           <Route exact path=\"/\">\n             <TaskPage tasks={tasks} onMoveTask={handleMovetask}/>\n            </Route>\n           <Route exact path=\"/add\">\n             <NewTaskForm onAddTask={handleAddtask}/>\n            </Route>\n           <Route exact path=\"/done\">\n             <DoneTasks tasks={trashTasks} onRemoveTask={handleDelete}/>\n            </Route>\n         </Switch>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n//import 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n     <Router>\n           <App />\n    </Router>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}